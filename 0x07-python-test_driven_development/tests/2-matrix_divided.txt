# `matrix_divided` Function Documentation

## Introduction

The `matrix_divided` function is designed to perform division on a matrix represented as a list of lists. This document provides usage instructions, as well as details on handling different scenarios and error cases.

## Function Signature

```python
matrix_divided(matrix, div)

matrix = [[1, 2, 3], [4, 5, 6]]
result = matrix_divided(matrix, 3)
# Output: [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

matrix = [[1, 2, 3], [4, 5, 6]]
result = matrix_divided(matrix, float('inf'))
# Output: [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

matrix = [[True, False], [1.1 , 2.2]]
matrix_divided(matrix, 2)  # Raises TypeError: matrix must be a matrix (list of lists) of integers/floats

matrix = [[]]
matrix_divided(matrix, 2)  # Raises TypeError: matrix must be a matrix (list of lists) of integers/floats

matrix = [[1.2, 2.4, 3.6], [4.8, 5.0, 6.2]]
matrix_divided(matrix, True)  # Raises TypeError: div must be a number

matrix_divided()  # Raises TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

matrix_divided(None)  # Raises TypeError: matrix_divided() missing 1 required positional argument: 'div'

matrix = [[1, 2, 3], [0], [0]]
matrix_divided(matrix, 2)  # Raises TypeError: Each row of the matrix must have the same size

matrix = [[1, 2, 3], [4, 5, 6]]
matrix_divided(matrix, 0)  # Raises ZeroDivisionError: division by zero


This documentation provides clear instructions on using the `matrix_divided` function and covers various error cases with informative error messages.

